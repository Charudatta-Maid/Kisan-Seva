import React, { useEffect, useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  FlatList,
  TouchableOpacity,
  Linking,
  Alert,
  ActivityIndicator,
  RefreshControl,
} from 'react-native';
import { db } from '../firebase';
import { collection, getDocs } from 'firebase/firestore';

export default function SchemesScreen() {
  const [schemes, setSchemes] = useState([]);
  const [loading, setLoading] = useState(true);
  const [refreshing, setRefreshing] = useState(false);

  // Fetch schemes from Firestore
  const fetchSchemes = async () => {
    setLoading(true);
    try {
      const snap = await getDocs(collection(db, 'schemes'));
      if (snap.empty) {
        // fallback to local if Firestore is empty
        setSchemes(localSchemes);
      } else {
        setSchemes(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));
      }
    } catch {
      setSchemes(localSchemes);
    }
    setLoading(false);
    setRefreshing(false);
  };

  useEffect(() => {
    fetchSchemes();
  }, []);

  const openSchemeLink = (url) => {
    Linking.canOpenURL(url)
      .then((supported) => {
        if (supported) {
          Linking.openURL(url);
        } else {
          Alert.alert('Error', '‡§Ø‡§π ‡§≤‡§ø‡§Ç‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ñ‡•ã‡§≤‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ');
        }
      })
      .catch(() => {
        Alert.alert('Error', '‡§ï‡•ã‡§à ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•Å‡§à');
      });
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>üßæ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç</Text>
      {loading ? (
        <ActivityIndicator size="large" color="#1565c0" style={{ marginTop: 40 }} />
      ) : schemes.length === 0 ? (
        <Text style={styles.emptyText}>‡§ï‡•ã‡§à ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§</Text>
      ) : (
        <FlatList
          data={schemes}
          keyExtractor={(item) => item.id}
          refreshControl={
            <RefreshControl refreshing={refreshing} onRefresh={() => { setRefreshing(true); fetchSchemes(); }} />
          }
          renderItem={({ item }) => (
            <TouchableOpacity
              style={styles.card}
              onPress={() => openSchemeLink(item.url)}
              activeOpacity={0.85}
            >
              <Text style={styles.schemeName}>{item.name}</Text>
              <Text style={styles.description}>{item.description}</Text>
            </TouchableOpacity>
          )}
        />
      )}
    </View>
  );
}

// Local fallback schemes (used if Firestore is empty or fails)
const localSchemes = [
  {
    id: '1',
    name: '‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§ï‡§ø‡§∏‡§æ‡§® ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§® ‡§®‡§ø‡§ß‡§ø (PM-KISAN)',
    description: '‡§π‡§∞ eligible ‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•ã ‚Çπ6000 ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑ ‡§ï‡•Ä ‡§Ü‡§∞‡•ç‡§•‡§ø‡§ï ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ‡•§',
    url: 'https://pmkisan.gov.in',
  },
  {
    id: '2',
    name: '‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§´‡§∏‡§≤ ‡§¨‡•Ä‡§Æ‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ (PMFBY)',
    description: '‡§´‡§∏‡§≤ ‡§®‡•Å‡§ï‡§∏‡§æ‡§® ‡§™‡§∞ ‡§¨‡•Ä‡§Æ‡§æ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ‡•§',
    url: 'https://pmfby.gov.in',
  },
  {
    id: '3',
    name: '‡§ï‡•É‡§∑‡§ø ‡§Ø‡§Ç‡§§‡•ç‡§∞ ‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ',
    description: '‡§ï‡•É‡§∑‡§ø ‡§â‡§™‡§ï‡§∞‡§£‡•ã‡§Ç ‡§™‡§∞ ‡§∏‡§∞‡§ï‡§æ‡§∞ ‡§∏‡•á ‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä‡•§',
    url: 'https://agrimachinery.nic.in',
  },
  {
    id: '4',
    name: '‡§à-‡§®‡§æ‡§Æ (eNAM)',
    description: '‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï unified online ‡§Æ‡§Ç‡§°‡•Ä‡•§',
    url: 'https://enam.gov.in',
  },
  {
    id: '5',
    name: '‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§ï‡•É‡§∑‡§ø ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§Ø‡•ã‡§ú‡§®‡§æ (RKVY)',
    description: '‡§∞‡§æ‡§ú‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§ï‡•É‡§∑‡§ø ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§ó‡•ç‡§∞ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ‡•§',
    url: 'https://rkvy.nic.in/',
  },
  {
    id: '6',
    name: '‡§∏‡•Ä‡§Æ‡§æ‡§Ç‡§§ ‡§î‡§∞ ‡§≤‡§ò‡•Å ‡§ï‡•É‡§∑‡§ï‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ã‡§£ ‡§Æ‡§æ‡§´‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ',
    description: '‡§≤‡§ò‡•Å ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§∞‡•ç‡§ú ‡§Æ‡§æ‡§´‡•Ä ‡§î‡§∞ ‡§∞‡§æ‡§π‡§§‡•§',
    url: 'https://agricoop.nic.in/en/Marginal-Farmers-Relief',
  },
  {
    id: '7',
    name: '‡§ï‡•É‡§∑‡§ø ‡§¨‡•Ä‡§Æ‡§æ ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤',
    description: '‡§¨‡•Ä‡§Æ‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£, ‡§¶‡§æ‡§µ‡•á ‡§î‡§∞ farmer enrollment ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤‡•§',
    url: 'https://agri-insurance.gov.in/',
  },
  {
    id: '8',
    name: '‡§Æ‡•É‡§¶‡§æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡§æ‡§∞‡•ç‡§° ‡§Ø‡•ã‡§ú‡§®‡§æ',
    description: '‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§ï‡•Ä ‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§æ‡§∞‡•ç‡§° ‚Äî ‡§∏‡§π‡•Ä ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§∏‡§π‡§ø‡§§‡•§',
    url: 'https://soilhealth.dac.gov.in/',
  },
  {
    id: '9',
    name: '‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§¨‡§æ‡§ó‡§µ‡§æ‡§®‡•Ä ‡§Æ‡§ø‡§∂‡§®',
    description: '‡§´‡§≤, ‡§∏‡§¨‡•ç‡§ú‡•Ä ‡§î‡§∞ ‡§´‡•Ç‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§µ‡§æ ‡§¶‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡•ã‡§ú‡§®‡§æ‡•§',
    url: 'https://nhm.dac.gov.in/',
  },
  {
    id: '10',
    name: '‡§°‡•á‡§Ø‡§∞‡•Ä ‡§â‡§¶‡•ç‡§Ø‡§Æ‡§ø‡§§‡§æ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§Ø‡•ã‡§ú‡§®‡§æ (DEDS)',
    description: '‡§°‡•á‡§Ø‡§∞‡•Ä ‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§®‡•Å‡§¶‡§æ‡§® ‡§î‡§∞ ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ‡•§',
    url: 'https://nabard.org/content.aspx?id=572&catid=23',
  },
];

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#e3f2fd', padding: 16 },
  title: {
    fontSize: 26,
    fontWeight: 'bold',
    marginBottom: 16,
    textAlign: 'center',
    color: '#1565c0',
    letterSpacing: 1,
  },
  card: {
    backgroundColor: '#fff',
    padding: 18,
    borderRadius: 14,
    marginBottom: 14,
    elevation: 4,
    shadowColor: '#1976d2',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.10,
    shadowRadius: 6,
    borderLeftWidth: 6,
    borderLeftColor: '#1976d2',
  },
  schemeName: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#0d47a1',
    marginBottom: 4,
  },
  description: {
    fontSize: 15,
    color: '#263238',
    marginBottom: 6,
  },
  emptyText: {
    textAlign: 'center',
    color: '#888',
    fontSize: 16,
    marginTop: 30,
  },
});